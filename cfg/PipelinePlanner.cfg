#!/usr/bin/env python
PACKAGE = "pipeline_planner"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("pipe_radius",double_t,0,"radius of pipeline, metre",0.5,0.001,50)
gen.add("lethal_cost",  int_t,   0, "lethal Cost. We daub out of pipeline by this value. We can't make a path on lethal cost in straight mode.",  253, 1, 255)
gen.add("centre_weight",  double_t,   0, "tendency to walk in the middle ",  75.0, 0.0, 255.0)
gen.add("num_threads",  int_t,   0, "thread number for CUDA parallel calculation. it is effective only when we use CUDA.",  256, 1, 16384)
gen.add("use_straight",   bool_t,   0, "To use straight line mode",  False)
gen.add("charge",   bool_t,   0, "To make a straight route without care of cost in use_straight mode",  False)
gen.add("time_display",   bool_t,   0, "To display consumed time information for makePlan on terminal",  False)
gen.add("use_torch",   bool_t,   0, "To use torch model",  True)
gen.add("torch_area_x",  double_t,   0, "width (x) of bright area in torch model, metre",  10.0, 0.0, 255.0)
gen.add("torch_area_y",  double_t,   0, "depth (y) of bright area in torch model, metre",  10.0, 0.0, 255.0)
#gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  1, 100)
#gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
#gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
#gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

#size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                       gen.const("Medium",     int_t, 1, "A medium constant"),
#                       gen.const("Large",      int_t, 2, "A large constant"),
#                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                     "An enum to set size")
#
#gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)
#
exit(gen.generate(PACKAGE, "pipeline_planner", "PipelinePlanner"))
